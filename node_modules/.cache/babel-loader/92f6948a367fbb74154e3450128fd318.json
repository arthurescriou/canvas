{"ast":null,"code":"import * as conf from './conf';\n\nconst clear = ctx => {\n  const {\n    height,\n    width\n  } = ctx.canvas;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n};\n\nconst drawCirle = (ctx, color) => _ref => {\n  let {\n    x,\n    y\n  } = _ref;\n  ctx.beginPath();\n  ctx.fillStyle = color !== null && color !== void 0 ? color : 'red';\n  ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI);\n  ctx.fill();\n};\n\nexport const render = ctx => state => {\n  clear(ctx);\n  ctx.font = '96px comic';\n  ctx.strokeText(`life ${state.player.life}`, 20, 100);\n  state.pos.map(drawCirle(ctx));\n  drawCirle(ctx, 'blue')(state.player.coord);\n\n  if (state.endOfGame) {\n    ctx.font = '48px';\n    ctx.strokeText('END OF GAME', 400, 400);\n  }\n};","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/components/canvas/renderer.ts"],"names":["conf","clear","ctx","height","width","canvas","fillStyle","fillRect","drawCirle","color","x","y","beginPath","arc","RADIUS","Math","PI","fill","render","state","font","strokeText","player","life","pos","map","coord","endOfGame"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;;AAGA,MAAMC,KAAK,GAAIC,GAAD,IAAmC;AAC/C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,GAAG,CAACG,MAA9B;AACAH,EAAAA,GAAG,CAACI,SAAJ,GAAgB,OAAhB;AACAJ,EAAAA,GAAG,CAACK,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBH,KAAnB,EAA0BD,MAA1B;AACD,CAJD;;AAMA,MAAMK,SAAS,GACb,CAACN,GAAD,EAAgCO,KAAhC,KACA,QAAwC;AAAA,MAAvC;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,GAAuC;AACtCT,EAAAA,GAAG,CAACU,SAAJ;AACAV,EAAAA,GAAG,CAACI,SAAJ,GAAgBG,KAAhB,aAAgBA,KAAhB,cAAgBA,KAAhB,GAAyB,KAAzB;AACAP,EAAAA,GAAG,CAACW,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAcX,IAAI,CAACc,MAAnB,EAA2B,CAA3B,EAA8B,IAAIC,IAAI,CAACC,EAAvC;AACAd,EAAAA,GAAG,CAACe,IAAJ;AACD,CAPH;;AASA,OAAO,MAAMC,MAAM,GAAIhB,GAAD,IAAoCiB,KAAD,IAAkB;AACzElB,EAAAA,KAAK,CAACC,GAAD,CAAL;AACAA,EAAAA,GAAG,CAACkB,IAAJ,GAAW,YAAX;AACAlB,EAAAA,GAAG,CAACmB,UAAJ,CAAgB,QAAOF,KAAK,CAACG,MAAN,CAAaC,IAAK,EAAzC,EAA4C,EAA5C,EAAgD,GAAhD;AACAJ,EAAAA,KAAK,CAACK,GAAN,CAAUC,GAAV,CAAcjB,SAAS,CAACN,GAAD,CAAvB;AACAM,EAAAA,SAAS,CAACN,GAAD,EAAM,MAAN,CAAT,CAAuBiB,KAAK,CAACG,MAAN,CAAaI,KAApC;;AACA,MAAIP,KAAK,CAACQ,SAAV,EAAqB;AACnBzB,IAAAA,GAAG,CAACkB,IAAJ,GAAW,MAAX;AACAlB,IAAAA,GAAG,CAACmB,UAAJ,CAAe,aAAf,EAA8B,GAA9B,EAAmC,GAAnC;AACD;AACF,CAVM","sourcesContent":["import * as conf from './conf'\nimport { State } from './state'\n\nconst clear = (ctx: CanvasRenderingContext2D) => {\n  const { height, width } = ctx.canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, width, height)\n}\n\nconst drawCirle =\n  (ctx: CanvasRenderingContext2D, color?: string) =>\n  ({ x, y }: { x: number; y: number }) => {\n    ctx.beginPath()\n    ctx.fillStyle = color ?? 'red'\n    ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI)\n    ctx.fill()\n  }\n\nexport const render = (ctx: CanvasRenderingContext2D) => (state: State) => {\n  clear(ctx)\n  ctx.font = '96px comic'\n  ctx.strokeText(`life ${state.player.life}`, 20, 100)\n  state.pos.map(drawCirle(ctx))\n  drawCirle(ctx, 'blue')(state.player.coord)\n  if (state.endOfGame) {\n    ctx.font = '48px'\n    ctx.strokeText('END OF GAME', 400, 400)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}