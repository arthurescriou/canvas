{"ast":null,"code":"var _jsxFileName = \"/Users/arthur.escriou/workspace/canvas/src/components/canvas/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as conf from './conf';\nimport { useRef, useEffect } from 'react';\nimport { step, click, mouseMove, endOfGame } from './state';\nimport { render } from './renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomInt = max => Math.floor(Math.random() * max);\n\nconst randomSign = () => Math.sign(Math.random() - 0.5);\n\nconst initCanvas = iterate => canvas => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n  requestAnimationFrame(() => iterate(ctx));\n};\n\nconst Canvas = _ref => {\n  _s();\n\n  let {\n    height,\n    width\n  } = _ref;\n  const initialState = {\n    pos: new Array(20).fill(1).map(_ => ({\n      life: conf.BALLLIFE,\n      coord: {\n        x: randomInt(width - 120) + 60,\n        y: randomInt(height - 120) + 60,\n        dx: 4 * randomSign(),\n        dy: 4 * randomSign()\n      }\n    })),\n    size: {\n      height,\n      width\n    },\n    endOfGame: true\n  };\n  const ref = useRef();\n  const state = useRef(initialState);\n\n  const iterate = ctx => {\n    state.current = step(state.current);\n    state.current.endOfGame = !endOfGame(state.current);\n    render(ctx)(state.current);\n    if (!state.current.endOfGame) requestAnimationFrame(() => iterate(ctx));\n  };\n\n  const onClick = e => {\n    state.current = click(state.current)(e);\n  };\n\n  const onMove = e => {\n    state.current = mouseMove(state.current)(e);\n  };\n\n  useEffect(() => {\n    if (ref.current) {\n      initCanvas(iterate)(ref.current);\n      ref.current.addEventListener('click', onClick);\n      ref.current.addEventListener('mousemove', onMove);\n    }\n\n    return () => {\n      ref.current.removeEventListener('click', onMove);\n      ref.current.removeEventListener('mousemove', onMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    height,\n    width,\n    ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Canvas, \"Gpm0P4FfDB25XYapIJctmdb7SaA=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/components/canvas/index.tsx"],"names":["conf","useRef","useEffect","step","click","mouseMove","endOfGame","render","randomInt","max","Math","floor","random","randomSign","sign","initCanvas","iterate","canvas","ctx","getContext","requestAnimationFrame","Canvas","height","width","initialState","pos","Array","fill","map","_","life","BALLLIFE","coord","x","y","dx","dy","size","ref","state","current","onClick","e","onMove","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import * as conf from './conf'\nimport { useRef, useEffect } from 'react'\nimport { State, step, click, mouseMove, endOfGame } from './state'\nimport { render } from './renderer'\n\nconst randomInt = (max: number) => Math.floor(Math.random() * max)\nconst randomSign = () => Math.sign(Math.random() - 0.5)\n\nconst initCanvas =\n  (iterate: (ctx: CanvasRenderingContext2D) => void) =>\n  (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    requestAnimationFrame(() => iterate(ctx))\n  }\n\nconst Canvas = ({ height, width }: { height: number; width: number }) => {\n  const initialState: State = {\n    pos: new Array(20).fill(1).map((_) => ({\n      life: conf.BALLLIFE,\n      coord: {\n        x: randomInt(width - 120) + 60,\n        y: randomInt(height - 120) + 60,\n        dx: 4 * randomSign(),\n        dy: 4 * randomSign(),\n      },\n    })),\n    size: { height, width },\n    endOfGame: true,\n  }\n\n  const ref = useRef<any>()\n  const state = useRef<State>(initialState)\n\n  const iterate = (ctx: CanvasRenderingContext2D) => {\n    state.current = step(state.current)\n    state.current.endOfGame = !endOfGame(state.current)\n    render(ctx)(state.current)\n    if (!state.current.endOfGame) requestAnimationFrame(() => iterate(ctx))\n  }\n  const onClick = (e: PointerEvent) => {\n    state.current = click(state.current)(e)\n  }\n\n  const onMove = (e: PointerEvent) => {\n    state.current = mouseMove(state.current)(e)\n  }\n  useEffect(() => {\n    if (ref.current) {\n      initCanvas(iterate)(ref.current)\n      ref.current.addEventListener('click', onClick)\n      ref.current.addEventListener('mousemove', onMove)\n    }\n    return () => {\n      ref.current.removeEventListener('click', onMove)\n      ref.current.removeEventListener('mousemove', onMove)\n    }\n  }, [])\n  return <canvas {...{ height, width, ref }} />\n}\n\nexport default Canvas\n"]},"metadata":{},"sourceType":"module"}