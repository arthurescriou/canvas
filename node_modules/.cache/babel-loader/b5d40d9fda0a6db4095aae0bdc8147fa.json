{"ast":null,"code":"import * as conf from './conf';\n\nconst iterate = bound => coord => {\n  const dx = (coord.x + conf.RADIUS > bound.width || coord.x < conf.RADIUS ? -coord.dx : coord.dx) * conf.FRICTION;\n  const dy = (coord.y + conf.RADIUS > bound.height || coord.y < conf.RADIUS ? -coord.dy : coord.dy) * conf.FRICTION;\n  console.log({\n    dx,\n    dy\n  });\n  return {\n    x: coord.x + dx,\n    y: coord.y + dy,\n    dx: Math.abs(dx) < conf.MINMOVE ? 0 : dx,\n    dy: Math.abs(dy) < conf.MINMOVE ? 0 : dy\n  };\n};\n\nexport const click = state => event => {\n  const {\n    offsetX,\n    offsetY\n  } = event;\n  console.log(offsetX, offsetY);\n  return state;\n};\nexport const step = state => ({ ...state,\n  pos: state.pos.map(iterate(state.size))\n});","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/components/canvas/state.ts"],"names":["conf","iterate","bound","coord","dx","x","RADIUS","width","FRICTION","dy","y","height","console","log","Math","abs","MINMOVE","click","state","event","offsetX","offsetY","step","pos","map","size"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;;AAKA,MAAMC,OAAO,GAAIC,KAAD,IAAkBC,KAAD,IAAkB;AACjD,QAAMC,EAAE,GACN,CAACD,KAAK,CAACE,CAAN,GAAUL,IAAI,CAACM,MAAf,GAAwBJ,KAAK,CAACK,KAA9B,IAAuCJ,KAAK,CAACE,CAAN,GAAUL,IAAI,CAACM,MAAtD,GACG,CAACH,KAAK,CAACC,EADV,GAEGD,KAAK,CAACC,EAFV,IAEgBJ,IAAI,CAACQ,QAHvB;AAIA,QAAMC,EAAE,GACN,CAACN,KAAK,CAACO,CAAN,GAAUV,IAAI,CAACM,MAAf,GAAwBJ,KAAK,CAACS,MAA9B,IAAwCR,KAAK,CAACO,CAAN,GAAUV,IAAI,CAACM,MAAvD,GACG,CAACH,KAAK,CAACM,EADV,GAEGN,KAAK,CAACM,EAFV,IAEgBT,IAAI,CAACQ,QAHvB;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAET,IAAAA,EAAF;AAAMK,IAAAA;AAAN,GAAZ;AACA,SAAO;AACLJ,IAAAA,CAAC,EAAEF,KAAK,CAACE,CAAN,GAAUD,EADR;AAELM,IAAAA,CAAC,EAAEP,KAAK,CAACO,CAAN,GAAUD,EAFR;AAGLL,IAAAA,EAAE,EAAEU,IAAI,CAACC,GAAL,CAASX,EAAT,IAAeJ,IAAI,CAACgB,OAApB,GAA8B,CAA9B,GAAkCZ,EAHjC;AAILK,IAAAA,EAAE,EAAEK,IAAI,CAACC,GAAL,CAASN,EAAT,IAAeT,IAAI,CAACgB,OAApB,GAA8B,CAA9B,GAAkCP;AAJjC,GAAP;AAMD,CAhBD;;AAkBA,OAAO,MAAMQ,KAAK,GACfC,KAAD,IACCC,KAAD,IAAgC;AAC9B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBF,KAA7B;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ,EAAqBC,OAArB;AACA,SAAOH,KAAP;AACD,CANI;AAQP,OAAO,MAAMI,IAAI,GAAIJ,KAAD,KAAmB,EACrC,GAAGA,KADkC;AAErCK,EAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,CAAUC,GAAV,CAAcvB,OAAO,CAACiB,KAAK,CAACO,IAAP,CAArB;AAFgC,CAAnB,CAAb","sourcesContent":["import * as conf from './conf'\ntype Coord = { x: number; y: number; dx: number; dy: number }\ntype Size = { height: number; width: number }\nexport type State = { pos: Array<Coord>; size: Size }\n\nconst iterate = (bound: Size) => (coord: Coord) => {\n  const dx =\n    (coord.x + conf.RADIUS > bound.width || coord.x < conf.RADIUS\n      ? -coord.dx\n      : coord.dx) * conf.FRICTION\n  const dy =\n    (coord.y + conf.RADIUS > bound.height || coord.y < conf.RADIUS\n      ? -coord.dy\n      : coord.dy) * conf.FRICTION\n  console.log({ dx, dy })\n  return {\n    x: coord.x + dx,\n    y: coord.y + dy,\n    dx: Math.abs(dx) < conf.MINMOVE ? 0 : dx,\n    dy: Math.abs(dy) < conf.MINMOVE ? 0 : dy,\n  }\n}\n\nexport const click =\n  (state: State) =>\n  (event: PointerEvent): State => {\n    const { offsetX, offsetY } = event\n    console.log(offsetX, offsetY)\n    return state\n  }\n\nexport const step = (state: State) => ({\n  ...state,\n  pos: state.pos.map(iterate(state.size)),\n})\n"]},"metadata":{},"sourceType":"module"}