{"ast":null,"code":"import*as conf from'./conf';var clear=function clear(ctx){var _ctx$canvas=ctx.canvas,height=_ctx$canvas.height,width=_ctx$canvas.width;ctx.fillStyle='white';ctx.fillRect(0,0,width,height);};var drawCirle=function drawCirle(ctx){return function(_ref){var x=_ref.x,y=_ref.y;ctx.beginPath();ctx.fillStyle='red';ctx.arc(x,y,conf.RADIUS,0,2*Math.PI);ctx.fill();};};export var render=function render(ctx){return function(state){clear(ctx);state.pos.map(drawCirle(ctx));};};","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/components/canvas/renderer.ts"],"names":["conf","clear","ctx","canvas","height","width","fillStyle","fillRect","drawCirle","x","y","beginPath","arc","RADIUS","Math","PI","fill","render","state","pos","map"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,IAAZ,KAAsB,QAAtB,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,GAAD,CAAmC,CAC/C,gBAA0BA,GAAG,CAACC,MAA9B,CAAQC,MAAR,aAAQA,MAAR,CAAgBC,KAAhB,aAAgBA,KAAhB,CACAH,GAAG,CAACI,SAAJ,CAAgB,OAAhB,CACAJ,GAAG,CAACK,QAAJ,CAAa,CAAb,CAAgB,CAAhB,CAAmBF,KAAnB,CAA0BD,MAA1B,EACD,CAJD,CAMA,GAAMI,CAAAA,SAAS,CACb,QADIA,CAAAA,SACJ,CAACN,GAAD,QACA,eAAwC,IAArCO,CAAAA,CAAqC,MAArCA,CAAqC,CAAlCC,CAAkC,MAAlCA,CAAkC,CACtCR,GAAG,CAACS,SAAJ,GACAT,GAAG,CAACI,SAAJ,CAAgB,KAAhB,CACAJ,GAAG,CAACU,GAAJ,CAAQH,CAAR,CAAWC,CAAX,CAAcV,IAAI,CAACa,MAAnB,CAA2B,CAA3B,CAA8B,EAAIC,IAAI,CAACC,EAAvC,EACAb,GAAG,CAACc,IAAJ,GACD,CAND,EADF,CASA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACf,GAAD,QAAmC,UAACgB,KAAD,CAAkB,CACzEjB,KAAK,CAACC,GAAD,CAAL,CACAgB,KAAK,CAACC,GAAN,CAAUC,GAAV,CAAcZ,SAAS,CAACN,GAAD,CAAvB,EACD,CAHqB,EAAf","sourcesContent":["import * as conf from './conf'\nimport { State } from './state'\n\nconst clear = (ctx: CanvasRenderingContext2D) => {\n  const { height, width } = ctx.canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, width, height)\n}\n\nconst drawCirle =\n  (ctx: CanvasRenderingContext2D) =>\n  ({ x, y }: { x: number; y: number }) => {\n    ctx.beginPath()\n    ctx.fillStyle = 'red'\n    ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI)\n    ctx.fill()\n  }\n\nexport const render = (ctx: CanvasRenderingContext2D) => (state: State) => {\n  clear(ctx)\n  state.pos.map(drawCirle(ctx))\n}\n"]},"metadata":{},"sourceType":"module"}