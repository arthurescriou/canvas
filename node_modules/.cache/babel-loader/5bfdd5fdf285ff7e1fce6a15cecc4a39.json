{"ast":null,"code":"var _jsxFileName = \"/Users/arthur.escriou/workspace/canvas/src/components/canvas/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as conf from './conf';\nimport { useRef, useEffect } from 'react';\nimport { step, click, mouseMove, endOfGame } from './state';\nimport { render } from './renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst randomInt = max => Math.floor(Math.random() * max);\n\nconst randomSign = () => Math.sign(Math.random() - 0.5);\n\nconst initCanvas = iterate => canvas => {\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n  requestAnimationFrame(() => iterate(ctx));\n};\n\nconst Canvas = _ref => {\n  _s();\n\n  let {\n    height,\n    width\n  } = _ref;\n  const initialState = {\n    pos: new Array(20).fill(1).map(_ => ({\n      life: conf.BALLLIFE,\n      coord: {\n        x: randomInt(width - 120) + 60,\n        y: randomInt(height - 120) + 60,\n        dx: 4 * randomSign(),\n        dy: 4 * randomSign()\n      }\n    })),\n    size: {\n      height,\n      width\n    },\n    endOfGame: true\n  };\n  const ref = useRef();\n  const state = useRef(initialState);\n  const scaleRef = useRef(1);\n  const posRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const drag = useRef(false);\n  const dragStart = useRef({\n    x: 0,\n    y: 0\n  });\n  const renderProps = {\n    pos: posRef.current,\n    scale: scaleRef.current\n  };\n\n  const iterate = ctx => {\n    state.current = step(state.current);\n    state.current.endOfGame = !endOfGame(state.current);\n    render(ctx, renderProps)(state.current);\n    if (!state.current.endOfGame) requestAnimationFrame(() => iterate(ctx));\n  };\n\n  const onClick = e => {\n    state.current = click(state.current)(e);\n  };\n\n  const onMove = e => {\n    state.current = mouseMove(state.current)(e);\n  };\n\n  useEffect(() => {\n    if (ref.current) {\n      const onWheel = e => {\n        const {\n          offsetX,\n          offsetY,\n          deltaY\n        } = e;\n        const zoomFactor = 0.98;\n\n        if (scaleRef.current > 0.5 || deltaY < 0) {\n          const factor = e.deltaY > 0 ? zoomFactor : 1 / zoomFactor;\n          scaleRef.current = scaleRef.current * factor;\n          const dx = offsetX / scaleRef.current * (factor - 1);\n          const dy = offsetY / scaleRef.current * (factor - 1);\n          posRef.current = {\n            x: posRef.current.x - dx,\n            y: posRef.current.y - dy\n          };\n        }\n      };\n\n      const onDragStart = e => {\n        const {\n          x,\n          y\n        } = e;\n        dragStart.current = {\n          x,\n          y\n        };\n        drag.current = true;\n        downTS.current = Date.now();\n      };\n\n      const onDragEnd = _e => drag.current = false;\n\n      const onDragMove = e => {\n        if (drag.current) {\n          const {\n            x,\n            y\n          } = e;\n          const scale = scaleRef.current;\n          const pos = posRef.current;\n          posRef.current = {\n            x: (x - dragStart.current.x) / scale + pos.x,\n            y: (y - dragStart.current.y) / scale + pos.y\n          };\n          dragStart.current = {\n            x,\n            y\n          };\n        }\n      };\n\n      initCanvas(iterate)(ref.current);\n      ref.current.addEventListener('click', onClick);\n      ref.current.addEventListener('mousemove', onMove);\n      ref.current.addEventListener('wheel', onWheel);\n      ref.current.addEventListener('mouseupoutside', onDragEnd);\n      ref.current.addEventListener('touchendoutside', onDragEnd);\n      ref.current.addEventListener('mouseup', onClick);\n      ref.current.addEventListener('mousemove', onDragMove);\n      ref.current.addEventListener('mousedown', onDragStart);\n      ref.current.addEventListener('touchstart', onDragStart);\n      ref.current.addEventListener('mouseup', onDragEnd);\n      ref.current.addEventListener('touchend', onDragEnd);\n      ref.current.addEventListener('mousemove', onDragMove);\n      ref.current.addEventListener('touchmove', onDragMove);\n    }\n\n    return () => {\n      ref.current.removeEventListener('click', onMove);\n      ref.current.removeEventListener('mousemove', onMove);\n      ref.current.removeEventListener('wheel', onWheel);\n      ref.current.removeEventListener('mouseupoutside', onDragEnd);\n      ref.current.removeEventListener('touchendoutside', onDragEnd);\n      ref.current.removeEventListener('mouseup', onClick);\n      ref.current.removeEventListener('mousemove', onDragMove);\n      ref.current.removeEventListener('mousedown', onDragStart);\n      ref.current.removeEventListener('touchstart', onDragStart);\n      ref.current.removeEventListener('mouseup', onDragEnd);\n      ref.current.removeEventListener('touchend', onDragEnd);\n      ref.current.removeEventListener('mousemove', onDragMove);\n      ref.current.removeEventListener('touchmove', onDragMove);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    height,\n    width,\n    ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Canvas, \"VcKsXY3Iv/ya39+KDscYC+w8As0=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/components/canvas/index.tsx"],"names":["conf","useRef","useEffect","step","click","mouseMove","endOfGame","render","randomInt","max","Math","floor","random","randomSign","sign","initCanvas","iterate","canvas","ctx","getContext","requestAnimationFrame","Canvas","height","width","initialState","pos","Array","fill","map","_","life","BALLLIFE","coord","x","y","dx","dy","size","ref","state","scaleRef","posRef","drag","dragStart","renderProps","current","scale","onClick","e","onMove","onWheel","offsetX","offsetY","deltaY","zoomFactor","factor","onDragStart","downTS","Date","now","onDragEnd","_e","onDragMove","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import * as conf from './conf'\nimport { useRef, useEffect } from 'react'\nimport { State, step, click, mouseMove, endOfGame } from './state'\nimport { render, RenderProps } from './renderer'\n\nconst randomInt = (max: number) => Math.floor(Math.random() * max)\nconst randomSign = () => Math.sign(Math.random() - 0.5)\n\nconst initCanvas =\n  (iterate: (ctx: CanvasRenderingContext2D) => void) =>\n  (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d')\n    if (!ctx) return\n    requestAnimationFrame(() => iterate(ctx))\n  }\n\nconst Canvas = ({ height, width }: { height: number; width: number }) => {\n  const initialState: State = {\n    pos: new Array(20).fill(1).map((_) => ({\n      life: conf.BALLLIFE,\n      coord: {\n        x: randomInt(width - 120) + 60,\n        y: randomInt(height - 120) + 60,\n        dx: 4 * randomSign(),\n        dy: 4 * randomSign(),\n      },\n    })),\n    size: { height, width },\n    endOfGame: true,\n  }\n\n  const ref = useRef<any>()\n  const state = useRef<State>(initialState)\n  const scaleRef = useRef<number>(1)\n  const posRef = useRef<{ x: number; y: number }>({ x: 0, y: 0 })\n  const drag = useRef<boolean>(false)\n  const dragStart = useRef<{ x: number; y: number }>({ x: 0, y: 0 })\n  const renderProps: RenderProps = {\n    pos: posRef.current,\n    scale: scaleRef.current,\n  }\n\n  const iterate = (ctx: CanvasRenderingContext2D) => {\n    state.current = step(state.current)\n    state.current.endOfGame = !endOfGame(state.current)\n    render(ctx, renderProps)(state.current)\n    if (!state.current.endOfGame) requestAnimationFrame(() => iterate(ctx))\n  }\n  const onClick = (e: PointerEvent) => {\n    state.current = click(state.current)(e)\n  }\n\n  const onMove = (e: PointerEvent) => {\n    state.current = mouseMove(state.current)(e)\n  }\n\n  useEffect(() => {\n    if (ref.current) {\n      const onWheel = (e: WheelEvent) => {\n        const { offsetX, offsetY, deltaY } = e\n        const zoomFactor = 0.98\n        if (scaleRef.current > 0.5 || deltaY < 0) {\n          const factor = e.deltaY > 0 ? zoomFactor : 1 / zoomFactor\n          scaleRef.current = scaleRef.current * factor\n          const dx = (offsetX / scaleRef.current) * (factor - 1)\n          const dy = (offsetY / scaleRef.current) * (factor - 1)\n          posRef.current = {\n            x: posRef.current.x - dx,\n            y: posRef.current.y - dy,\n          }\n        }\n      }\n      const onDragStart = (e: PointerEvent) => {\n        const { x, y } = e\n        dragStart.current = { x, y }\n        drag.current = true\n        downTS.current = Date.now()\n      }\n      const onDragEnd = (_e: any) => (drag.current = false)\n      const onDragMove = (e: PointerEvent) => {\n        if (drag.current) {\n          const { x, y } = e\n          const scale = scaleRef.current\n          const pos = posRef.current\n          posRef.current = {\n            x: (x - dragStart.current.x) / scale + pos.x,\n            y: (y - dragStart.current.y) / scale + pos.y,\n          }\n          dragStart.current = { x, y }\n        }\n      }\n\n      initCanvas(iterate)(ref.current)\n      ref.current.addEventListener('click', onClick)\n      ref.current.addEventListener('mousemove', onMove)\n      ref.current.addEventListener('wheel', onWheel)\n      ref.current.addEventListener('mouseupoutside', onDragEnd)\n      ref.current.addEventListener('touchendoutside', onDragEnd)\n      ref.current.addEventListener('mouseup', onClick)\n      ref.current.addEventListener('mousemove', onDragMove)\n      ref.current.addEventListener('mousedown', onDragStart)\n      ref.current.addEventListener('touchstart', onDragStart)\n      ref.current.addEventListener('mouseup', onDragEnd)\n      ref.current.addEventListener('touchend', onDragEnd)\n      ref.current.addEventListener('mousemove', onDragMove)\n      ref.current.addEventListener('touchmove', onDragMove)\n    }\n    return () => {\n      ref.current.removeEventListener('click', onMove)\n      ref.current.removeEventListener('mousemove', onMove)\n      ref.current.removeEventListener('wheel', onWheel)\n      ref.current.removeEventListener('mouseupoutside', onDragEnd)\n      ref.current.removeEventListener('touchendoutside', onDragEnd)\n      ref.current.removeEventListener('mouseup', onClick)\n      ref.current.removeEventListener('mousemove', onDragMove)\n      ref.current.removeEventListener('mousedown', onDragStart)\n      ref.current.removeEventListener('touchstart', onDragStart)\n      ref.current.removeEventListener('mouseup', onDragEnd)\n      ref.current.removeEventListener('touchend', onDragEnd)\n      ref.current.removeEventListener('mousemove', onDragMove)\n      ref.current.removeEventListener('touchmove', onDragMove)\n    }\n  }, [])\n  return <canvas {...{ height, width, ref }} />\n}\n\nexport default Canvas\n"]},"metadata":{},"sourceType":"module"}