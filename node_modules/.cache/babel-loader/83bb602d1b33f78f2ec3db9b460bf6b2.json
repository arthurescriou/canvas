{"ast":null,"code":"var _jsxFileName = \"/Users/arthur.escriou/workspace/canvas/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [size, setSize] = useState({\n    height: 1000,\n    width: 1000\n  });\n  const container = useRef();\n  useEffect(() => {\n    setTimeout(() => {\n      setSize({\n        height: container.current.clientHeight,\n        width: container.current.clientWidth\n      });\n    }, 100);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    ref: container,\n    children: JSON.stringify(size)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EfhPcQmD58b4mOwsimbMAVhHSos=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/App.tsx"],"names":["useRef","useEffect","useState","App","size","setSize","height","width","container","setTimeout","current","clientHeight","clientWidth","JSON","stringify"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAO;AAAEI,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAAP,CAAhC;AACA,QAAMC,SAAS,GAAGR,MAAM,EAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,MAAM;AACfJ,MAAAA,OAAO,CAAC;AACNC,QAAAA,MAAM,EAAEE,SAAS,CAACE,OAAV,CAAkBC,YADpB;AAENJ,QAAAA,KAAK,EAAEC,SAAS,CAACE,OAAV,CAAkBE;AAFnB,OAAD,CAAP;AAID,KALS,EAKP,GALO,CAAV;AAMD,GAPQ,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,GAAG,EAAEJ,SAA1B;AAAA,cACGK,IAAI,CAACC,SAAL,CAAeV,IAAf;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMD,G;;KAAAA,G;AAkBN,eAAeA,GAAf","sourcesContent":["import { useRef, useEffect, useState } from 'react'\nimport './App.css'\n\ntype Size = {\n  height: number\n  width: number\n}\nconst App = () => {\n  const [size, setSize] = useState<Size>({ height: 1000, width: 1000 })\n  const container = useRef<any>()\n  useEffect(() => {\n    setTimeout(() => {\n      setSize({\n        height: container.current.clientHeight,\n        width: container.current.clientWidth,\n      })\n    }, 100)\n  })\n  return (\n    <div className=\"App\" ref={container}>\n      {JSON.stringify(size)}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}