{"ast":null,"code":"import * as conf from './conf';\n\nconst clear = ctx => {\n  const {\n    height,\n    width\n  } = ctx.canvas;\n  ctx.fillStyle = 'white';\n  ctx.fillRect(0, 0, width, height);\n};\n\nconst drawCirle = ctx => _ref => {\n  let {\n    x,\n    y\n  } = _ref;\n  ctx.beginPath();\n  ctx.fillStyle = 'red';\n  ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI);\n  ctx.fill();\n};\n\nexport const render = ctx => state => {\n  clear(ctx);\n  state.pos.map(drawCirle(ctx));\n};","map":{"version":3,"sources":["/Users/arthur.escriou/workspace/canvas/src/components/canvas/renderer.ts"],"names":["conf","clear","ctx","height","width","canvas","fillStyle","fillRect","drawCirle","x","y","beginPath","arc","RADIUS","Math","PI","fill","render","state","pos","map"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,QAAtB;;AAGA,MAAMC,KAAK,GAAIC,GAAD,IAAmC;AAC/C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBF,GAAG,CAACG,MAA9B;AACAH,EAAAA,GAAG,CAACI,SAAJ,GAAgB,OAAhB;AACAJ,EAAAA,GAAG,CAACK,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmBH,KAAnB,EAA0BD,MAA1B;AACD,CAJD;;AAMA,MAAMK,SAAS,GACZN,GAAD,IACA,QAAwC;AAAA,MAAvC;AAAEO,IAAAA,CAAF;AAAKC,IAAAA;AAAL,GAAuC;AACtCR,EAAAA,GAAG,CAACS,SAAJ;AACAT,EAAAA,GAAG,CAACI,SAAJ,GAAgB,KAAhB;AACAJ,EAAAA,GAAG,CAACU,GAAJ,CAAQH,CAAR,EAAWC,CAAX,EAAcV,IAAI,CAACa,MAAnB,EAA2B,CAA3B,EAA8B,IAAIC,IAAI,CAACC,EAAvC;AACAb,EAAAA,GAAG,CAACc,IAAJ;AACD,CAPH;;AASA,OAAO,MAAMC,MAAM,GAAIf,GAAD,IAAoCgB,KAAD,IAAkB;AACzEjB,EAAAA,KAAK,CAACC,GAAD,CAAL;AACAgB,EAAAA,KAAK,CAACC,GAAN,CAAUC,GAAV,CAAcZ,SAAS,CAACN,GAAD,CAAvB;AACD,CAHM","sourcesContent":["import * as conf from './conf'\nimport { State } from './state'\n\nconst clear = (ctx: CanvasRenderingContext2D) => {\n  const { height, width } = ctx.canvas\n  ctx.fillStyle = 'white'\n  ctx.fillRect(0, 0, width, height)\n}\n\nconst drawCirle =\n  (ctx: CanvasRenderingContext2D) =>\n  ({ x, y }: { x: number; y: number }) => {\n    ctx.beginPath()\n    ctx.fillStyle = 'red'\n    ctx.arc(x, y, conf.RADIUS, 0, 2 * Math.PI)\n    ctx.fill()\n  }\n\nexport const render = (ctx: CanvasRenderingContext2D) => (state: State) => {\n  clear(ctx)\n  state.pos.map(drawCirle(ctx))\n}\n"]},"metadata":{},"sourceType":"module"}